# 🔧 環境設定與依賴安裝 (可重用的工作流程)
name: Environment Setup

on:
  workflow_call:
    inputs:
      platform:
        description: 'Target platform'
        required: true
        type: string
      rust-target:
        description: 'Rust compilation target'
        required: true
        type: string

jobs:
  setup:
    runs-on: ${{ inputs.platform }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ inputs.rust-target }}
          components: rustfmt, clippy

      - name: 📦 Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          cache-on-failure: true

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # Windows 專用設定
      - name: 🪟 Setup Windows build tools
        if: runner.os == 'Windows'
        run: |
          # 安裝 MSVC 構建工具
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"

      # macOS 專用設定  
      - name: 🍎 Setup macOS build tools
        if: runner.os == 'macOS'
        run: |
          # 確保 Xcode 命令行工具已安裝
          xcode-select --install 2>/dev/null || true
          
          # 安裝 universal target
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: 🏗️ Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: ✅ Verify setup
        run: |
          echo "Node.js: $(node --version)"
          echo "npm: $(npm --version)"  
          echo "Rust: $(rustc --version)"
          echo "Cargo: $(cargo --version)"
          rustup show